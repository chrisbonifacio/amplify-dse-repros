type Blog
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: public, operations: [read] }
      { allow: groups, groups: ["admin"] }
    ]
  ) {
  id: ID!
  name: String!
  posts: [Post] @connection(keyName: "byBlog", fields: ["id"])
}

type Post
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: public, operations: [read] }
      { allow: groups, groups: ["admin"] }
    ]
  )
  @key(name: "byBlog", fields: ["blogID"]) {
  id: ID!
  title: String!
  blogID: ID!
  blog: Blog @connection(fields: ["blogID"])
  comments: [Comment] @connection(keyName: "byPost", fields: ["id"])
}

type Comment
  @model
  @auth(
    rules: [
      { allow: owner, operations: [update, delete] }
      { allow: private, operations: [create] }
      { allow: groups, groups: ["admin"] }
    ]
  )
  @key(name: "byPost", fields: ["postID", "content"]) {
  id: ID!
  postID: ID!
  post: Post @connection(fields: ["postID"])
  content: String!
}

type PublicTodo @model @auth(rules: [{ allow: public }]) {
  id: ID!
  title: String!
  completed: Boolean!
}

type IAMTodo @model @auth(rules: [{ allow: public, provider: iam }]) {
  id: ID!
  title: String!
  completed: Boolean!
}

type PrivateTodo
  @model
  @auth(rules: [{ allow: owner, provider: oidc, identityClaim: "sub" }]) {
  id: ID!
  title: String!
  completed: Boolean!
}
